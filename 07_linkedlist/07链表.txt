如何轻松写出正确的链表代码？
（1）理解指针或引用的含义
    指针：C      引用：JAVA，Python
    无论是指针还是引用都是存贮对象的内存地址。
    将某个变量赋值给指针，实际上就是将这个变量的地址赋值给指针，或者反过来说，指针中存贮了这个变量的内存地址，指向了这个变量，通过指针就可以找到这个变量。
（2）警惕指针丢失和内存泄漏
    a:插入操作时一定要注意操作的顺序
    b:删除操作时一定要注意手动释放内存空间。（可以自动管理内存的编程语言可以不考虑此项：JAVA、Python）
（3）利用哨兵简化实现难度
    对于单链表的插入和删除操作，需要对第一个节点和最后一个节点进行特殊处理。
    引入哨兵：不管链表是不是空，head指针都会指向这个哨兵节点，把这种带有哨兵节点的链表叫做带头链表，否则叫做不带头链表。
    注：
        带头链表是不存储数据的。
    由于哨兵一直存在，因此在插入和删除操作时就可以使用统一的代码逻辑了。
（4）重点留意边界条件的处理
    检查链表代码的边界条件是都正确：
    a:如果链表为空时，代码是否正常工作
    b:链表只包含一个节点时，代码是否正常工作
    c:链表只包含两个节点时，代码是否正常工作
    d:代码逻辑在处理头尾节点时候，是否正常工作
（5）画图举例，多加练习


常见链表操作：
（1）单链表翻转
（2）链表中环的检测
（3）两个有序链表的合并
（4）删除链表倒数第n个节点
（5）求链表的中间节点