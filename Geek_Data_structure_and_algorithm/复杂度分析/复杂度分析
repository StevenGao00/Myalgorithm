大 O 复杂度表示法：时间复杂度、空间复杂度
时间复杂度分析：
1、时间复杂度分析法表示代码执行时间随数据规模增长的变化趋势，也叫渐进时间复杂度，简称时间复杂度。
2、分析方法：
   1）只关注循环次数最多的一段代码
   2）加法原则：总复杂度等于量级最大的那段代码的复杂度
      T(n) = T1(n) + T2(n) = max(O(f(n)), O(g(n))) = O(max(f(n), g(n)))
   3）乘法原则：嵌套代码复杂度等于嵌套内外代码复杂度的乘积
      T(n) = T1(n) + T2(n) = max(O(f(n)), O(g(n))) = O(max(f(n), g(n)))
3、常见的时间复杂度
   多项式量级：O(1)、O(logn)、O(n)、O(nlogn)、O(n^2)、O(n^k)、O(m+n)、O(m*n)
   非多项式量级：指数阶 O(2^n)、 阶乘阶 O(n!)

   因为对数之间是可以互相转换的：O(log3n) = O(C * log2n), 统称O(logn)
   比较常用的时间复杂度：O(1)、O(logn)、O(n)、O(nlogn)、O(n^2)
空间复杂度分析：
1、空间复杂度分析法表示代码的存储空间与数据规模之间的增长关系，也叫渐进空间复杂度，简称空间复杂度。
2、常见的空间复杂度就是 O(1)、O(n)、O(n^2)